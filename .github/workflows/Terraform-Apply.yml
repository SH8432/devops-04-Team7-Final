name: 'Terraform-Apply'

on:
  push:
    branches: [ "IaC" ]
    paths:
      - "ChildManageSys/Terraform/**"

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ChildManageSys/Terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Change to Terraform directory
    #   run: cd ChildManageSys/Terraform

    - name: Check Terraform directory
      run: pwd

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init

    # - name: Terraform Plan
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: terraform plan -out=planfile

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CHILDMANAGESYS_USERNAME: ${{ secrets.CHILDMANAGESYS_USERNAME }}
        CHILDMANAGESYS_PASSWORD: ${{ secrets.CHILDMANAGESYS_PASSWORD }}
        CHILDMANAGESYS_HOSTNAME: ${{ secrets.CHILDMANAGESYS_HOSTNAME }}
        CHILDMANAGESYS_DATABASE: ${{ secrets.CHILDMANAGESYS_DATABASE }}
      run: |
        terraform apply -auto-approve \
          -var 'db_username= ${{ env.CHILDMANAGESYS_USERNAME }}' \
          -var 'db_password= ${{ env.CHILDMANAGESYS_PASSWORD }}' \
          -var 'db_hostname= ${{ env.CHILDMANAGESYS_HOSTNAME }}' \
          -var 'db_database= ${{ env.CHILDMANAGESYS_DATABASE }}'
